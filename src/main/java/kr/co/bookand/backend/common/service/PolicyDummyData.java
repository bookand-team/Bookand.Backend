package kr.co.bookand.backend.common.service;

import kr.co.bookand.backend.policy.domain.Policy;
import kr.co.bookand.backend.policy.repository.PolicyRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;

@Component
@RequiredArgsConstructor
public class PolicyDummyData {

    private final PolicyRepository policyRepository;

    @PostConstruct
    public void dummyData() {
        Policy terms = Policy.builder()
                .title("terms")
                .content(termsContent)
                .build();

        Policy personalInfoAgree = Policy.builder()
                .title("personal-info-agree")
                .content(personalInfoPolicy)
                .build();

        Policy locationBaseTerms = Policy.builder()
                .title("location-base-terms")
                .content(personalInfoPolicy)
                .build();

        Policy privacy = Policy.builder()
                .title("privacy")
                .content(termsContent)
                .build();

        Policy operation = Policy.builder()
                .title("operation")
                .content(termsContent)
                .build();

        policyRepository.save(terms);
        policyRepository.save(personalInfoAgree);
        policyRepository.save(locationBaseTerms);
        policyRepository.save(privacy);
        policyRepository.save(operation);

    }

    private static String termsContent = "_< BOOK& >('https://www.bookand.co.kr'이하 'BOOK&')_은(는) 「개인정보 보호법」 제30조에 따라 정보주체의 개인정보를 보호하고 이와 관련한 고충을 신속하고 원활하게 처리할 수 있도록 하기 위하여 다음과 같이 개인정보 처리방침을 수립·공개합니다.\n" +
            "\n" +
            "○ 이 개인정보처리방침은 _2022_년 _1_월 _1_부터 적용됩니다.\n" +
            "\n" +
            "  \n" +
            "\n" +
            "**제1조(개인정보의 처리 목적)  \n" +
            "  \n" +
            "_< BOOK& >('https://www.bookand.co.kr'이하 'BOOK&')_은(는) 다음의 목적을 위하여 개인정보를 처리합니다. 처리하고 있는 개인정보는 다음의 목적 이외의 용도로는 이용되지 않으며 이용 목적이 변경되는 경우에는 「개인정보 보호법」 제18조에 따라 별도의 동의를 받는 등 필요한 조치를 이행할 예정입니다.**\n" +
            "\n" +
            "1\\. 홈페이지 회원가입 및 관리\n" +
            "\n" +
            "회원 가입의사 확인, 회원자격 유지·관리 목적으로 개인정보를 처리합니다.\n" +
            "\n" +
            "  \n" +
            "\n" +
            "2\\. 마케팅 및 광고에의 활용\n" +
            "\n" +
            "신규 서비스(제품) 개발 및 맞춤 서비스 제공, 이벤트 및 광고성 정보 제공 및 참여기회 제공 , 인구통계학적 특성에 따른 서비스 제공 및 광고 게재 등을 목적으로 개인정보를 처리합니다.\n" +
            "\n" +
            "  \n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제2조(개인정보의 처리 및 보유 기간)**  \n" +
            "  \n" +
            "① _< BOOK& >_은(는) 법령에 따른 개인정보 보유·이용기간 또는 정보주체로부터 개인정보를 수집 시에 동의받은 개인정보 보유·이용기간 내에서 개인정보를 처리·보유합니다.  \n" +
            "  \n" +
            "② 각각의 개인정보 처리 및 보유 기간은 다음과 같습니다.\n" +
            "\n" +
            "*   1.<홈페이지 회원가입 및 관리>\n" +
            "*   <홈페이지 회원가입 및 관리>와 관련한 개인정보는 수집.이용에 관한 동의일로부터<1년>까지 위 이용목적을 위하여 보유.이용됩니다.\n" +
            "*   보유근거 : 게시물 및 댓글 작성자 표시\n" +
            "*   관련법령 :\n" +
            "*   예외사유 :\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제3조(처리하는 개인정보의 항목)**  \n" +
            "  \n" +
            "① _< BOOK& >_은(는) 다음의 개인정보 항목을 처리하고 있습니다.\n" +
            "\n" +
            "*   1< 홈페이지 회원가입 및 관리 >\n" +
            "*   필수항목 : 이메일\n" +
            "*   선택항목 :\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제4조(개인정보의 파기절차 및 파기방법)**\n" +
            "\n" +
            "_  \n" +
            "① < BOOK& > 은(는) 개인정보 보유기간의 경과, 처리목적 달성 등 개인정보가 불필요하게 되었을 때에는 지체없이 해당 개인정보를 파기합니다.  \n" +
            "  \n" +
            "② 정보주체로부터 동의받은 개인정보 보유기간이 경과하거나 처리목적이 달성되었음에도 불구하고 다른 법령에 따라 개인정보를 계속 보존하여야 하는 경우에는, 해당 개인정보를 별도의 데이터베이스(DB)로 옮기거나 보관장소를 달리하여 보존합니다.  \n" +
            "1\\. 법령 근거 :  \n" +
            "2\\. 보존하는 개인정보 항목 : 계좌정보, 거래날짜  \n" +
            "  \n" +
            "③ 개인정보 파기의 절차 및 방법은 다음과 같습니다.  \n" +
            "1\\. 파기절차  \n" +
            "< BOOK& > 은(는) 파기 사유가 발생한 개인정보를 선정하고, < BOOK& > 의 개인정보 보호책임자의 승인을 받아 개인정보를 파기합니다.  \n" +
            "_\n" +
            "\n" +
            "_2\\. 파기방법_\n" +
            "\n" +
            "_전자적 파일 형태의 정보는 기록을 재생할 수 없는 기술적 방법을 사용합니다_\n" +
            "\n" +
            "_  \n" +
            "  \n" +
            "\n" +
            "**제5조(정보주체와 법정대리인의 권리·의무 및 그 행사방법에 관한 사항)**\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "① 정보주체는 BOOK&에 대해 언제든지 개인정보 열람·정정·삭제·처리정지 요구 등의 권리를 행사할 수 있습니다.\n" +
            "\n" +
            "② 제1항에 따른 권리 행사는BOOK&에 대해 「개인정보 보호법」 시행령 제41조제1항에 따라 서면, 전자우편, 모사전송(FAX) 등을 통하여 하실 수 있으며 BOOK&은(는) 이에 대해 지체 없이 조치하겠습니다.\n" +
            "\n" +
            "③ 제1항에 따른 권리 행사는 정보주체의 법정대리인이나 위임을 받은 자 등 대리인을 통하여 하실 수 있습니다.이 경우 “개인정보 처리 방법에 관한 고시(제2020-7호)” 별지 제11호 서식에 따른 위임장을 제출하셔야 합니다.\n" +
            "\n" +
            "④ 개인정보 열람 및 처리정지 요구는 「개인정보 보호법」 제35조 제4항, 제37조 제2항에 의하여 정보주체의 권리가 제한 될 수 있습니다.\n" +
            "\n" +
            "⑤ 개인정보의 정정 및 삭제 요구는 다른 법령에서 그 개인정보가 수집 대상으로 명시되어 있는 경우에는 그 삭제를 요구할 수 없습니다.\n" +
            "\n" +
            "⑥ BOOK&은(는) 정보주체 권리에 따른 열람의 요구, 정정·삭제의 요구, 처리정지의 요구 시 열람 등 요구를 한 자가 본인이거나 정당한 대리인인지를 확인합니다.\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제6조(개인정보의 안전성 확보조치에 관한 사항)_  \n" +
            "  \n" +
            "< BOOK& >_은(는) 개인정보의 안전성 확보를 위해 다음과 같은 조치를 취하고 있습니다.**\n" +
            "\n" +
            "1\\. 정기적인 자체 감사 실시  \n" +
            "개인정보 취급 관련 안정성 확보를 위해 정기적(분기 1회)으로 자체 감사를 실시하고 있습니다.  \n" +
            "  \n" +
            "2\\. 개인정보 취급 직원의 최소화 및 교육  \n" +
            "개인정보를 취급하는 직원을 지정하고 담당자에 한정시켜 최소화 하여 개인정보를 관리하는 대책을 시행하고 있습니다.  \n" +
            "  \n" +
            "3\\. 내부관리계획의 수립 및 시행  \n" +
            "개인정보의 안전한 처리를 위하여 내부관리계획을 수립하고 시행하고 있습니다.  \n" +
            "  \n" +
            "4\\. 해킹 등에 대비한 기술적 대책  \n" +
            "<_BOOK&_\\>('_BOOK&_')은 해킹이나 컴퓨터 바이러스 등에 의한 개인정보 유출 및 훼손을 막기 위하여 보안프로그램을 설치하고 주기적인 갱신·점검을 하며 외부로부터 접근이 통제된 구역에 시스템을 설치하고 기술적/물리적으로 감시 및 차단하고 있습니다.  \n" +
            "  \n" +
            "5\\. 개인정보의 암호화  \n" +
            "이용자의 개인정보는 비밀번호는 암호화 되어 저장 및 관리되고 있어, 본인만이 알 수 있으며 중요한 데이터는 파일 및 전송 데이터를 암호화 하거나 파일 잠금 기능을 사용하는 등의 별도 보안기능을 사용하고 있습니다.  \n" +
            "  \n" +
            "6\\. 접속기록의 보관 및 위변조 방지  \n" +
            "개인정보처리시스템에 접속한 기록을 최소 1년 이상 보관, 관리하고 있으며,다만, 5만명 이상의 정보주체에 관하여 개인정보를 추가하거나, 고유식별정보 또는 민감정보를 처리하는 경우에는 2년이상 보관, 관리하고 있습니다.  \n" +
            "또한, 접속기록이 위변조 및 도난, 분실되지 않도록 보안기능을 사용하고 있습니다.  \n" +
            "  \n" +
            "7\\. 개인정보에 대한 접근 제한  \n" +
            "개인정보를 처리하는 데이터베이스시스템에 대한 접근권한의 부여,변경,말소를 통하여 개인정보에 대한 접근통제를 위하여 필요한 조치를 하고 있으며 침입차단시스템을 이용하여 외부로부터의 무단 접근을 통제하고 있습니다.  \n" +
            "  \n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제7조(개인정보를 자동으로 수집하는 장치의 설치·운영 및 그 거부에 관한 사항)**\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "BOOK& 은(는) 정보주체의 이용정보를 저장하고 수시로 불러오는 ‘쿠키(cookie)’를 사용하지 않습니다.\n" +
            "\n" +
            "**제8조 (개인정보 보호책임자에 관한 사항)**\n" +
            "\n" +
            "① BOOK& 은(는) 개인정보 처리에 관한 업무를 총괄해서 책임지고, 개인정보 처리와 관련한 정보주체의 불만처리 및 피해구제 등을 위하여 아래와 같이 개인정보 보호책임자를 지정하고 있습니다.\n" +
            "\n" +
            "*   ▶ 개인정보 보호책임자\n" +
            "*   성명 :홍길동\n" +
            "*   직책 :-\n" +
            "*   직급 :-\n" +
            "*   연락처 :010-1111-1111, example@example.com,\n" +
            "\n" +
            "※ 개인정보 보호 담당부서로 연결됩니다.\n" +
            "\n" +
            "*   ▶ 개인정보 보호 담당부서\n" +
            "*   부서명 :\n" +
            "*   담당자 :\n" +
            "*   연락처 :, ,\n" +
            "\n" +
            "② 정보주체께서는 BOOK& 의 서비스(또는 사업)을 이용하시면서 발생한 모든 개인정보 보호 관련 문의, 불만처리, 피해구제 등에 관한 사항을 개인정보 보호책임자 및 담당부서로 문의하실 수 있습니다. BOOK& 은(는) 정보주체의 문의에 대해 지체 없이 답변 및 처리해드릴 것입니다.\n" +
            "\n" +
            "**제9조(개인정보의 열람청구를 접수·처리하는 부서)  \n" +
            "정보주체는 ｢개인정보 보호법｣ 제35조에 따른 개인정보의 열람 청구를 아래의 부서에 할 수 있습니다.  \n" +
            "< BOOK& >은(는) 정보주체의 개인정보 열람청구가 신속하게 처리되도록 노력하겠습니다.**\n" +
            "\n" +
            "*   ▶ 개인정보 열람청구 접수·처리 부서\n" +
            "*   부서명 :\n" +
            "*   담당자 :\n" +
            "*   연락처 : , ,\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "\n" +
            "**제10조(정보주체의 권익침해에 대한 구제방법)**\n" +
            "\n" +
            "  \n" +
            "  \n" +
            "정보주체는 개인정보침해로 인한 구제를 받기 위하여 개인정보분쟁조정위원회, 한국인터넷진흥원 개인정보침해신고센터 등에 분쟁해결이나 상담 등을 신청할 수 있습니다. 이 밖에 기타 개인정보침해의 신고, 상담에 대하여는 아래의 기관에 문의하시기 바랍니다.  \n" +
            "  \n" +
            "1\\. 개인정보분쟁조정위원회 : (국번없이) 1833-6972 (www.kopico.go.kr)  \n" +
            "2\\. 개인정보침해신고센터 : (국번없이) 118 (privacy.kisa.or.kr)  \n" +
            "3\\. 대검찰청 : (국번없이) 1301 (www.spo.go.kr)  \n" +
            "4\\. 경찰청 : (국번없이) 182 (ecrm.cyber.go.kr)  \n" +
            "  \n" +
            "「개인정보보호법」제35조(개인정보의 열람), 제36조(개인정보의 정정·삭제), 제37조(개인정보의 처리정지 등)의 규정에 의한 요구에 대 하여 공공기관의 장이 행한 처분 또는 부작위로 인하여 권리 또는 이익의 침해를 받은 자는 행정심판법이 정하는 바에 따라 행정심판을 청구할 수 있습니다.  \n" +
            "  \n" +
            "※ 행정심판에 대해 자세한 사항은 중앙행정심판위원회(www.simpan.go.kr) 홈페이지를 참고하시기 바랍니다.  \n" +
            "  \n" +
            "\n" +
            "**제11조(개인정보 처리방침 변경)**\n" +
            "\n" +
            "  \n" +
            "\n" +
            "① 이 개인정보처리방침은 2022년 1월 1부터 적용됩니다.\n" +
            "\n" +
            "② 이전의 개인정보 처리방침은 아래에서 확인하실 수 있습니다.\n" +
            "\n" +
            "예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)\n" +
            "\n" +
            "예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)\n" +
            "\n" +
            "예시 ) - 20XX. X. X ~ 20XX. X. X 적용 (클릭)\n" +
            "\n" +
            "_";

    private static String personalInfoPolicy = "## ****아이템 24. 멤버 클래스는 되도록 static으로 만들라****\n" +
            "\n" +
            "## 중첩 클래스\n" +
            "\n" +
            "다른 클래스 안에 정의된 클래스다. \n" +
            "\n" +
            "중첩 클래스는 자신을 감싼 **바깥 클래스에서만 쓰여야 하며,** \n" +
            "\n" +
            "**그 외의 쓰임새가 있다면 톱레벨 클래스로 만들어야 한다.**\n" +
            "\n" +
            "### **중첩 클래스 종류**\n" +
            "\n" +
            "- 정적 멤버 클래스\n" +
            "- (비정적) 멤버 클래스\n" +
            "- 익명 클래스\n" +
            "- 지역 클래스\n" +
            "\n" +
            "정적 멤버 클래스를 제외한 나머지는 내부 클래스(inner class)다.\n" +
            "\n" +
            "### **중첩 클래스를 왜 사용해야 할까?**\n" +
            "\n" +
            "사실 외부에 선언하는 일반 클래스와 다를바 없다.\n" +
            "\n" +
            "그럼에도 사용하는 이유는 다음과 같다.\n" +
            "\n" +
            "- 클래스를 논리적으로 그룹화할 수 있다.\n" +
            "- 가독성 및 유지보수에 유리\n" +
            "- 캡슐화 증가\n" +
            "\n" +
            "# 정적 멤버 클래스\n" +
            "\n" +
            "```java\n" +
            "class A {\n" +
            "  private int a;\n" +
            "\n" +
            "\tstatic class B {...}\n" +
            "}\n" +
            "```\n" +
            "\n" +
            "- 클래스 내부에 static으로 선언된 클래스다.\n" +
            "- 다른 클래스 안에 선언되고, 바깥 클래스의 private 멤버에도 접근 가능\n" +
            "- private으로 선언시 바깥 클래스에서만 접근 가능하다.\n" +
            "- public 도우미 클래스로 쓰인다.\n" +
            "\n" +
            "```java\n" +
            "public class Calculator{\n" +
            "\n" +
            "  enum Operation{\n" +
            "    PLUS,\n" +
            "    MINUS\n" +
            "  }\n" +
            "  \n" +
            "}\n" +
            "\n" +
            " public static void main(String[] args){\n" +
            "    Calculator calculator new Calculator();\n" +
            "    Calculator.Operation.PLUS; //연산 방식을 꺼내 사용할 수 있음\n" +
            " }\n" +
            "```\n" +
            "\n" +
            "# 비정적 멤버 클래스\n" +
            "\n" +
            "```java\n" +
            "class A{\n" +
            "    private int a;\n" +
            "  \n" +
            "    class B {...}\n" +
            "}\n" +
            "```\n" +
            "\n" +
            "- static이 붙지 않은 멤버 클래스다.\n" +
            "- 비정적 멤버 클래스의 인스턴스는 바깥 클래스의 인스턴스와 암묵적으로 연결된다. 그래서 `클래스명.this` 형태로를 사용해 바깥 인스턴스의 메서드를 호출하거나 바깥 인스턴스의 참조를 가져올 수 있다.\n" +
            "- 바깥 인스턴스 없이 생성 불가능하다.\n" +
            "- 어탭터를 정의할 때 자주 쓰인다. ex) `HashMap` 의 `keySet()`\n" +
            "\n" +
            "## 정적 맴버 클래스 vs 비정적 맴버 클래스\n" +
            "\n" +
            "- 생성\n" +
            "\n" +
            "```java\n" +
            "void staticClass(){\n" +
            "    A.B b = new B();\n" +
            "}\n" +
            "\n" +
            "void staticNotClass(){\n" +
            "    A a = new A();\n" +
            "    A.B b = a.new B();\n" +
            "}\n" +
            "//or\n" +
            "void staticNotClass(){\n" +
            "    A.B b = new A().new B();\n" +
            "}\n" +
            "```\n" +
            "\n" +
            "- 참조\n" +
            "    \n" +
            "    비정적 내부 클래스를 생성하는 경우에는 반드시 `A`객체를 생성한 뒤 객체를 이용해서 생성해야 한다.\n" +
            "    \n" +
            "    즉, 비정적 내부 클래스는 바깥 클래스(이 경우 `A`)에 대한 참조가 필요하다는 것이다.\n" +
            "    \n" +
            "\n" +
            "### **멤버 클래스에서 바깥 인스턴스에 접근할 일이 없으면 무조건 `static`을 붙여서 정적 멤버 클래스로 만들자.**\n" +
            "\n" +
            "- static을 생략하면 바깥 인스턴스로의 숨은 참조가 생기고,\n" +
            "- 참조를 저장하기 위해 시간과 공간이 소비된다. 또한 가**비지 컬렉션이 바깥 클래스의 인스턴스를 수거하지 못한다.**\n" +
            "\n" +
            "→ 비정적 내부 클래스는 메모리 누수를 고려해야한다.\n" +
            "\n" +
            "# 익명 클래스\n" +
            "\n" +
            "- 익명 클래스는 바깥 클래스의 멤버도 아니다.\n" +
            "- 쓰이는 시점에 선언 + 인스턴스 생성 (코드에 어디서든 만들 수 있음)\n" +
            "- 오직 비정적인 문맥에서 사용될 떄만 바깥 클래스의 인스턴스를 참조할 수 있다.\n" +
            "    - 정적 문맥에서라도 상수 변수 이외의 정적멤버는 가질 수 없음\n" +
            "    - 상수 표현을 위해 초기화된 `final` 기본 타입과 문자열 필드만 가질 수 있음\n" +
            "\n" +
            "- 익명 클래스는 응용하는데 제약이 많은 편이다.\n" +
            "    - 선언한 지점에서만 인스턴스를 만들 수 있음\n" +
            "    - `instanceof` 검사나 클래스의 이름이 필요한 작업은 수행할 수 없음\n" +
            "    - 여러 인터페이스를 구현할 수 없고, 인터페이스를 구현하는 동시에 다른 클래스를 상속할 수도 없음\n" +
            "    - 익명 클래스를 사용하는 클라이언트는 익명 클래스가 상위 타입에서 상속한 멤버 외에는 호출할 수 없음\n" +
            "    - 익명 클래스는 표현식 중간에 등장하므로 (10줄 이하로) 짧지 않으면 가독성이 떨어짐\n" +
            "    \n" +
            "- 즉석에서 작은 함수 객체나 처리 객체를 만드는 데 주로 사용\n" +
            "\n" +
            "  >>> 람다 등장 이후로 람다가 이 역할을 대체\n" +
            "\n" +
            "```java\n" +
            "List<Integer> list = Arrays.asList(10, 5, 6, 7, 1, 3, 4);\n" +
            "\n" +
            "// 익명 클래스 사용\n" +
            "Collections.sort(list, new Comparator<Integer>() {\n" +
            "    @Override\n" +
            "    public int compare(Integer o1, Integer o2) {\n" +
            "        return Integer.compare(o1, o2);\n" +
            "    }\n" +
            "});\n" +
            "\n" +
            "// 람다 도입 후\n" +
            "Collections.sort(list, Comparator.comparingInt(o -> o));\n" +
            "```\n" +
            "\n" +
            "# 지역 클래스\n" +
            "\n" +
            "```java\n" +
            "public class A {\n" +
            "\n" +
            "  public void getBInstance() {\n" +
            "    \n" +
            "    class B {\n" +
            "\n" +
            "      private B() {\n" +
            "      }\n" +
            "    }\n" +
            "    \n" +
            "    B b = new B();\n" +
            "  }\n" +
            "  \n" +
            "}\n" +
            "```\n" +
            "\n" +
            "- 가장 드물게 사용된다.\n" +
            "- 유효범위가 지역 변수와 같고, 비정적 문맥에서 사용될 때만 바깥 인스턴스를 참조할 수 있고, 정적 멤버는 가질 수없고, 짧게 작성해야 한다.\n" +
            "- 지역 변수를 선언할 수 있는 곳이면 어디서든 선언 가능\n" +
            "- 유효 범위는 지역 변수와 동일";
}
